name: Security (Bandit & pip-audit)

on:
  push:
    branches: [ "main", "master" ]
  pull_request:
  schedule:
    - cron: "0 6 * * 1"  # Lundi 06:00 UTC
  workflow_dispatch:

permissions:
  contents: read

jobs:
  bandit:
    name: Bandit (code security lint)
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"
          cache: "pip"

      - name: Install project (editable) + bandit
        run: |
          python -m pip install -U pip
          pip install -e .
          pip install bandit

      - name: Run Bandit (JSON report)
        run: |
          # -r récursif, -x ignore tests (moins de bruit)
          # -f json sort en JSON ; --exit-zero pour ne pas casser le CI pour l’instant
          bandit -r src -x tests -lll -f json -o bandit-report.json --exit-zero

      - name: Upload Bandit artifact
        uses: actions/upload-artifact@v4
        with:
          name: bandit-report
          path: bandit-report.json

  pip-audit:
    name: pip-audit (dependency vulnerabilities)
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"
          cache: "pip"

      - name: Install project (editable)
        run: |
          python -m pip install -U pip
          pip install -e .
          # Si tu veux aussi auditer les deps de dev, décommente :
          # pip install -e .[dev]

      - name: Run pip-audit (JSON)
        run: |
          pip install pip-audit
          # Report-only pour l’instant
          pip-audit -f json -o pip-audit-report.json || true

      - name: Upload pip-audit report
        uses: actions/upload-artifact@v4
        with:
          name: pip-audit-report
          path: pip-audit-report.json
