name: publish

on:
  release:
    types: [published]      # se déclenche quand tu crées une release
  push:
    tags:
      - "v*"                # se déclenche quand tu pousses un tag vX.Y.Z
  workflow_dispatch: {}      # tu peux aussi le lancer à la main

jobs:
  build-and-publish:
    name: Build & Publish to PyPI (OIDC)
    runs-on: ubuntu-latest

    permissions:
      id-token: write
      contents: read

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Upgrade build toolchain
        run: |
          python -m pip install --upgrade pip
          pip install build

      - name: Sanity check version match
        run: |
          python - << 'PY'
          import tomllib, pathlib, re
          init = pathlib.Path("src/digitalmeve/__init__.py").read_text(encoding="utf-8")
          m = re.search(r'__version__\s*=\s*[\'"]([^\'"]+)[\'"]', init)
          v_py = m.group(1) if m else None
          with open("pyproject.toml","rb") as f:
            v_toml = tomllib.load(f)["project"]["version"]
          assert v_py == v_toml, f"Version mismatch: __init__={v_py} vs pyproject={v_toml}"
          print("Version OK:", v_py)
          PY

      - name: Build sdist & wheel
        run: python -m build

      - name: Publish to PyPI (Trusted Publisher)
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          print-hash: true
